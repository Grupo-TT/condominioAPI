name: SonarCloud analysis

on:
  push:
    branches: [ "development" ]
  pull_request:
    branches: [ "development" ]
  workflow_dispatch:

permissions:
  pull-requests: read

jobs:
  Analysis:
    runs-on: ubuntu-latest

    env:
      DB_HOST_CONDOMINIO: ${{ secrets.DB_HOST_CONDOMINIO }}
      DB_NAME_CONDOMINIO: ${{ secrets.DB_NAME_CONDOMINIO }}
      USER_DB_CONDOMINIO: ${{ secrets.USER_DB_CONDOMINIO }}
      PASSWORD_DB_CONDOMINIO: ${{ secrets.PASSWORD_DB }}

    services:
      mysql:
        image: mysql:8
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.PASSWORD_DB_CONDOMINIO }}
          MYSQL_DATABASE: ${{ secrets.DB_NAME_CONDOMINIO }}
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn clean verify
        
      - name: Analyze with SonarCloud
        uses: SonarSource/sonarcloud-github-action@4006f663ecaf1f8093e8e4abb9227f6041f52216
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=${{ secrets.PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.ORGANIZATION_KEY }}
            -Dsonar.sources=src/main/java
            -Dsonar.java.binaries=target/classes
            -Dsonar.tests=src/test/java
